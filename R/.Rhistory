# Make sure we are not comparing a strain to itself
condition_1 = strain_1 != strain_2
# Also make sure that we haven't added this pair of strains before already
strain_pair <- paste(sort(c(strain_1, strain_2)), collapse = ",")
condition_2 = !(strain_pair %in% observed_pairs)
# If both these conditions are covered, analyze the pair of strains and add their characteristics to the output vectors
if (condition_1 & condition_2) {
strains_1 <- c(strains_1, strain_1)
strains_2 <- c(strains_2, strain_2)
protein_number_1 <- c(protein_number_1, length(proteins_strain_1))
protein_number_2 <- c(protein_number_2, length(proteins_strain_2))
protein_names_1 <- c(protein_names_1, paste(proteins_strain_1, collapse = ","))
protein_names_2 <- c(protein_names_2, paste(proteins_strain_2, collapse = ","))
overlap <- c(overlap, paste(intersect(proteins_strain_1, proteins_strain_2), collapse = ","))
overlap_size <- c(overlap_size, length(intersect(proteins_strain_1, proteins_strain_2)))
observed_pairs <- c(observed_pairs, paste(sort(c(strain_1, strain_2)), collapse = ","))
}
}
}
DE_protein_overlaps <- data.frame(strains_1, strains_2, protein_number_1, protein_number_2, overlap_size, protein_names_1, protein_names_2, overlap)
DE_protein_overlaps <- DE_protein_overlaps %>%
mutate(overlap_over_strain_1 = overlap_size/protein_number_1,
overlap_over_strain_2 = overlap_size/protein_number_2,
overlap_over_union = overlap_size/(protein_number_1+protein_number_2),
overlap_over_log_union = overlap_size/log2(protein_number_1+protein_number_2),
Jaccard_index = overlap_size/(protein_number_1+protein_number_2-overlap_size))
# Match to strain_1
DE_protein_overlaps <- DE_protein_overlaps %>%
rename(Strain.Name = strains_1)
temp <- responsiveness %>%
dplyr::select(Strain.Name, anticodon, Amino_acid_1_letter, chromosome_letter, amino_acid_type, amino_acid_charge)
DE_protein_overlaps <- left_join(DE_protein_overlaps, temp, by = "Strain.Name") %>%
rename(anticodon_1 = anticodon,
Amino_acid_1 = Amino_acid_1_letter,
chr_1 = chromosome_letter,
aa_type_1 = amino_acid_type,
aa_charge_1 = amino_acid_charge)
## Repeat this for the columns only in master_dataset (U_34 and A_34)
temp <- master_dataset %>%
dplyr::select(Strain.Name, contains("Nt_at"))
DE_protein_overlaps <- left_join(DE_protein_overlaps, temp, by = "Strain.Name") %>%
rename(strains_1 = Strain.Name,
Nt_at_32_1 = Nt_at_32,
Nt_at_33_1 = Nt_at_33,
Nt_at_34_1 = Nt_at_34,
Nt_at_35_1 = Nt_at_35,
Nt_at_36_1 = Nt_at_36,
Nt_at_37_1 = Nt_at_37,
Nt_at_38_1 = Nt_at_38,
Strain.Name = strains_2)
# Match to strain_2
temp <- responsiveness %>%
dplyr::select(Strain.Name, anticodon, Amino_acid_1_letter, chromosome_letter, amino_acid_type, amino_acid_charge)
DE_protein_overlaps <- left_join(DE_protein_overlaps, temp, by = "Strain.Name") %>%
rename(anticodon_2 = anticodon,
Amino_acid_2 = Amino_acid_1_letter,
aa_type_2 = amino_acid_type,
aa_charge_2 = amino_acid_charge,
chr_2 = chromosome_letter)
## Repeat this for the columns only in master_dataset (U_34 and A_34)
temp <- master_dataset %>%
dplyr::select(Strain.Name, contains("Nt_at"))
DE_protein_overlaps <- left_join(DE_protein_overlaps, temp, by = "Strain.Name") %>%
rename(strains_2 = Strain.Name,
Nt_at_32_2 = Nt_at_32,
Nt_at_33_2 = Nt_at_33,
Nt_at_34_2 = Nt_at_34,
Nt_at_35_2 = Nt_at_35,
Nt_at_36_2 = Nt_at_36,
Nt_at_37_2 = Nt_at_37,
Nt_at_38_2 = Nt_at_38)
# Come up with columns that require matching between these 2 sets of them
DE_protein_overlaps <- DE_protein_overlaps %>%
mutate(same_family = anticodon_1 == anticodon_2,
same_amino_acid = Amino_acid_1 == Amino_acid_2,
same_chromosome = chr_1 == chr_2,
same_family_and_chr = same_family&same_chromosome,
same_amino_acid_and_chr = same_amino_acid&same_chromosome,
same_aa_type = aa_type_1 == aa_type_2,
same_aa_charge = aa_charge_1 == aa_charge_2,
Nt_at_32 = Nt_at_32_1 == Nt_at_32_2,
Nt_at_33 = Nt_at_33_1 == Nt_at_33_2,
Nt_at_34 = Nt_at_34_1 == Nt_at_34_2,
Nt_at_35 = Nt_at_35_1 == Nt_at_35_2,
Nt_at_36 = Nt_at_36_1 == Nt_at_36_2,
Nt_at_37 = Nt_at_37_1 == Nt_at_37_2,
Nt_at_38 = Nt_at_38_1 == Nt_at_38_2) %>%
dplyr::select(-c(Nt_at_32_1, Nt_at_33_1, Nt_at_34_1, Nt_at_35_1, Nt_at_36_1, Nt_at_37_1, Nt_at_38_1,
Nt_at_32_2, Nt_at_33_2, Nt_at_34_2, Nt_at_35_2, Nt_at_36_2, Nt_at_37_2, Nt_at_38_2))
# Get columns based on strain_1 and strain_2, but which reorganize this: the one with more DEPs to one column, the one with less DEPs to the other
# Just so that I can check the overlap_size/amount of DEPs in the KO strain with less out of the pair. Not sure if too important but oh well
DE_protein_overlaps <- DE_protein_overlaps %>%
rowwise() %>%
mutate(Strain_more_DEPs = max(protein_number_1, protein_number_2),
Strain_less_DEPs = min(protein_number_1, protein_number_2),
Ratio_more_to_less_DEPs = Strain_more_DEPs/Strain_less_DEPs)
# Add columns where I combine the strings for the anticodons and amino acids for the 2 strains (always using sort() before so that they are unique)
DE_protein_overlaps <- DE_protein_overlaps %>%
rowwise() %>%
mutate(both_anticodons = paste(sort(c(anticodon_1, anticodon_2)), collapse = "-"),
both_amino_acids = paste(sort(c(Amino_acid_1, Amino_acid_2)), collapse = "-"),
both_aa_types = paste(sort(c(aa_type_1, aa_type_2)), collapse = "-"),
both_aa_charges = paste(sort(c(aa_charge_1, aa_charge_2)), collapse = "-"))
# Put columns with protein names as the last ones
DE_protein_overlaps <- DE_protein_overlaps %>%
relocate(protein_names_1, .after = last_col()) %>%
relocate(protein_names_2, .after = last_col()) %>%
relocate(overlap, .after = last_col())
if (alpha == 0.01) {
fwrite(DE_protein_overlaps, paste(base_dir, "Data/Other/compare_DEPs_across_KOs/DE_protein_overlaps_001.tsv", sep=""))
}
if (alpha == 0.05) {
fwrite(DE_protein_overlaps, paste(base_dir, "Data/Other/compare_DEPs_across_KOs/DE_protein_overlaps_005.tsv", sep=""))
}
# Create some vectors to collect the p-values
variables <- c()
p_vals_chi_square <- c()
true_to_false_ratio_chi_square <- c()
p_vals_wmw <- c()
effect_size_directions_wmw <- c()
# Same amino acid
variables <- c(variables, "Amino acid carried")
## Chi-square test for the proportion of 0s in each group
data <- table(as.numeric(!(DE_protein_overlaps$Jaccard_index == 0)), DE_protein_overlaps$same_amino_acid)
p_vals_chi_square <- c(p_vals_chi_square, chisq.test(data)$p.value)
## Proportion of 0s in each group
true_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$same_amino_acid == T] == 0, na.rm = T)/
sum(DE_protein_overlaps$same_amino_acid == T)
false_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$same_amino_acid == F] == 0, na.rm = T)/
sum(DE_protein_overlaps$same_amino_acid == F)
true_to_false_ratio <- true_group_zero_prop/false_group_zero_prop                         # This means the proportion of 0s in the False group is almost double that in the True group???
true_to_false_ratio_chi_square <- c(true_to_false_ratio_chi_square, true_to_false_ratio)
## Wilcoxon-Mann Whitney test for the non-zero values
temp <- DE_protein_overlaps %>%
filter(Jaccard_index != 0)
x <- temp$Jaccard_index[temp$same_amino_acid == T]
y <- temp$Jaccard_index[temp$same_amino_acid == F]
p_vals_wmw <- c(p_vals_wmw, wilcox.test(x, y)$p.value)
# Wilcoxon-Mann Whitney effect size
effect_size_directions_wmw <- c(effect_size_directions_wmw, mean(x)-mean(y))
# Same family (anticodon)
variables <- c(variables, "Anticodon")
## Chi-square test for the proportion of 0s in each group
data <- table(as.numeric(!(DE_protein_overlaps$Jaccard_index == 0)), DE_protein_overlaps$same_family)
p_vals_chi_square <- c(p_vals_chi_square, chisq.test(data)$p.value)
## Proportion of 0s in each group
true_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$same_family == T] == 0, na.rm = T)/
sum(DE_protein_overlaps$same_family == T)
false_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$same_family == F] == 0, na.rm = T)/
sum(DE_protein_overlaps$same_family == F)
true_to_false_ratio <- true_group_zero_prop/false_group_zero_prop                         # This means the proportion of 0s in the False group is almost double that in the True group???
true_to_false_ratio_chi_square <- c(true_to_false_ratio_chi_square, true_to_false_ratio)
## Wilcoxon-Mann Whitney test for the non-zero values
temp <- DE_protein_overlaps %>%
filter(Jaccard_index != 0)
x <- temp$Jaccard_index[temp$same_family == T]
y <- temp$Jaccard_index[temp$same_family == F]
p_vals_wmw <- c(p_vals_wmw, wilcox.test(x, y)$p.value)
# Wilcoxon-Mann Whitney effect size
effect_size_directions_wmw <- c(effect_size_directions_wmw, mean(x)-mean(y))
# Same chromosome
variables <- c(variables, "Chromosome")
## Chi-square test for the proportion of 0s in each group
data <- table(as.numeric(!(DE_protein_overlaps$Jaccard_index == 0)), DE_protein_overlaps$same_chromosome)
p_vals_chi_square <- c(p_vals_chi_square, chisq.test(data)$p.value)
## Proportion of 0s in each group
true_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$same_chromosome == T] == 0, na.rm = T)/
sum(DE_protein_overlaps$same_chromosome == T)
false_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$same_chromosome == F] == 0, na.rm = T)/
sum(DE_protein_overlaps$same_chromosome == F)
true_to_false_ratio <- true_group_zero_prop/false_group_zero_prop                         # This means the proportion of 0s in the False group is almost double that in the True group???
true_to_false_ratio_chi_square <- c(true_to_false_ratio_chi_square, true_to_false_ratio)
## Wilcoxon-Mann Whitney test for the non-zero values
temp <- DE_protein_overlaps %>%
filter(Jaccard_index != 0)
x <- temp$Jaccard_index[temp$same_chromosome == T]
y <- temp$Jaccard_index[temp$same_chromosome == F]
p_vals_wmw <- c(p_vals_wmw, wilcox.test(x, y)$p.value)
# Wilcoxon-Mann Whitney effect size
effect_size_directions_wmw <- c(effect_size_directions_wmw, mean(x)-mean(y))
# Same family and chromosome
variables <- c(variables, "Anticodon and chromosome")
## Chi-square test for the proportion of 0s in each group
data <- table(as.numeric(!(DE_protein_overlaps$Jaccard_index == 0)), DE_protein_overlaps$same_family_and_chr)
p_vals_chi_square <- c(p_vals_chi_square, chisq.test(data)$p.value)
## Proportion of 0s in each group
true_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$same_family_and_chr == T] == 0, na.rm = T)/
sum(DE_protein_overlaps$same_family_and_chr == T)
false_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$same_family_and_chr == F] == 0, na.rm = T)/
sum(DE_protein_overlaps$same_family_and_chr == F)
true_to_false_ratio <- true_group_zero_prop/false_group_zero_prop                         # This means the proportion of 0s in the False group is almost double that in the True group???
true_to_false_ratio_chi_square <- c(true_to_false_ratio_chi_square, true_to_false_ratio)
## Wilcoxon-Mann Whitney test for the non-zero values
temp <- DE_protein_overlaps %>%
filter(Jaccard_index != 0)
x <- temp$Jaccard_index[temp$same_family_and_chr == T]
y <- temp$Jaccard_index[temp$same_family_and_chr == F]
p_vals_wmw <- c(p_vals_wmw, wilcox.test(x, y)$p.value)
# Wilcoxon-Mann Whitney effect size
effect_size_directions_wmw <- c(effect_size_directions_wmw, mean(x)-mean(y))
# Same family and chromosome
variables <- c(variables, "Amino acid carried and chromosome")
## Chi-square test for the proportion of 0s in each group
data <- table(as.numeric(!(DE_protein_overlaps$Jaccard_index == 0)), DE_protein_overlaps$same_amino_acid_and_chr)
p_vals_chi_square <- c(p_vals_chi_square, chisq.test(data)$p.value)
## Proportion of 0s in each group
true_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$same_amino_acid_and_chr == T] == 0, na.rm = T)/
sum(DE_protein_overlaps$same_amino_acid_and_chr == T)
false_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$same_amino_acid_and_chr == F] == 0, na.rm = T)/
sum(DE_protein_overlaps$same_amino_acid_and_chr == F)
true_to_false_ratio <- true_group_zero_prop/false_group_zero_prop                         # This means the proportion of 0s in the False group is almost double that in the True group???
true_to_false_ratio_chi_square <- c(true_to_false_ratio_chi_square, true_to_false_ratio)
## Wilcoxon-Mann Whitney test for the non-zero values
temp <- DE_protein_overlaps %>%
filter(Jaccard_index != 0)
x <- temp$Jaccard_index[temp$same_amino_acid_and_chr == T]
y <- temp$Jaccard_index[temp$same_amino_acid_and_chr == F]
p_vals_wmw <- c(p_vals_wmw, wilcox.test(x, y)$p.value)
# Wilcoxon-Mann Whitney effect size
effect_size_directions_wmw <- c(effect_size_directions_wmw, mean(x)-mean(y))
# Same amino acicd charge
variables <- c(variables, "Amino acid charge")
## Chi-square test for the proportion of 0s in each group
data <- table(as.numeric(!(DE_protein_overlaps$Jaccard_index == 0)), DE_protein_overlaps$same_aa_charge)
p_vals_chi_square <- c(p_vals_chi_square, chisq.test(data)$p.value)
## Proportion of 0s in each group
true_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$same_aa_charge == T] == 0, na.rm = T)/
sum(DE_protein_overlaps$same_aa_charge == T)
false_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$same_aa_charge == F] == 0, na.rm = T)/
sum(DE_protein_overlaps$same_aa_charge == F)
true_to_false_ratio <- true_group_zero_prop/false_group_zero_prop                         # This means the proportion of 0s in the False group is almost double that in the True group???
true_to_false_ratio_chi_square <- c(true_to_false_ratio_chi_square, true_to_false_ratio)
## Wilcoxon-Mann Whitney test for the non-zero values
temp <- DE_protein_overlaps %>%
filter(Jaccard_index != 0)
x <- temp$Jaccard_index[temp$same_aa_charge == T]
y <- temp$Jaccard_index[temp$same_aa_charge == F]
p_vals_wmw <- c(p_vals_wmw, wilcox.test(x, y)$p.value)
# Wilcoxon-Mann Whitney effect size
effect_size_directions_wmw <- c(effect_size_directions_wmw, mean(x)-mean(y))
# Same amino acicd type
variables <- c(variables, "Amino acid type")
## Chi-square test for the proportion of 0s in each group
data <- table(as.numeric(!(DE_protein_overlaps$Jaccard_index == 0)), DE_protein_overlaps$same_aa_type)
p_vals_chi_square <- c(p_vals_chi_square, chisq.test(data)$p.value)
## Proportion of 0s in each group
true_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$same_aa_type == T] == 0, na.rm = T)/
sum(DE_protein_overlaps$same_aa_type == T)
false_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$same_aa_type == F] == 0, na.rm = T)/
sum(DE_protein_overlaps$same_aa_type == F)
true_to_false_ratio <- true_group_zero_prop/false_group_zero_prop                         # This means the proportion of 0s in the False group is almost double that in the True group???
true_to_false_ratio_chi_square <- c(true_to_false_ratio_chi_square, true_to_false_ratio)
## Wilcoxon-Mann Whitney test for the non-zero values
temp <- DE_protein_overlaps %>%
filter(Jaccard_index != 0)
x <- temp$Jaccard_index[temp$same_aa_type == T]
y <- temp$Jaccard_index[temp$same_aa_type == F]
p_vals_wmw <- c(p_vals_wmw, wilcox.test(x, y)$p.value)
# Wilcoxon-Mann Whitney effect size
effect_size_directions_wmw <- c(effect_size_directions_wmw, mean(x)-mean(y))
# Same Nt at 32
variables <- c(variables, "Nt at 32")
## Chi-square test for the proportion of 0s in each group
data <- table(as.numeric(!(DE_protein_overlaps$Jaccard_index == 0)), DE_protein_overlaps$Nt_at_32)
p_vals_chi_square <- c(p_vals_chi_square, chisq.test(data)$p.value)
## Proportion of 0s in each group
true_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$Nt_at_32 == T] == 0, na.rm = T)/
sum(DE_protein_overlaps$Nt_at_32 == T)
false_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$Nt_at_32 == F] == 0, na.rm = T)/
sum(DE_protein_overlaps$Nt_at_32 == F)
true_to_false_ratio <- true_group_zero_prop/false_group_zero_prop                         # This means the proportion of 0s in the False group is almost double that in the True group???
true_to_false_ratio_chi_square <- c(true_to_false_ratio_chi_square, true_to_false_ratio)
## Wilcoxon-Mann Whitney test for the non-zero values
temp <- DE_protein_overlaps %>%
filter(Jaccard_index != 0)
x <- temp$Jaccard_index[temp$Nt_at_32 == T]
y <- temp$Jaccard_index[temp$Nt_at_32 == F]
p_vals_wmw <- c(p_vals_wmw, wilcox.test(x, y)$p.value)
# Wilcoxon-Mann Whitney effect size
effect_size_directions_wmw <- c(effect_size_directions_wmw, mean(x)-mean(y))
# Same Nt at 33
variables <- c(variables, "Nt at 33")
## Chi-square test for the proportion of 0s in each group
data <- table(as.numeric(!(DE_protein_overlaps$Jaccard_index == 0)), DE_protein_overlaps$Nt_at_33)
p_vals_chi_square <- c(p_vals_chi_square, chisq.test(data)$p.value)
## Proportion of 0s in each group
true_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$Nt_at_33 == T] == 0, na.rm = T)/
sum(DE_protein_overlaps$Nt_at_33 == T)
false_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$Nt_at_33 == F] == 0, na.rm = T)/
sum(DE_protein_overlaps$Nt_at_33 == F)
true_to_false_ratio <- true_group_zero_prop/false_group_zero_prop                         # This means the proportion of 0s in the False group is almost double that in the True group???
true_to_false_ratio_chi_square <- c(true_to_false_ratio_chi_square, true_to_false_ratio)
## Wilcoxon-Mann Whitney test for the non-zero values
temp <- DE_protein_overlaps %>%
filter(Jaccard_index != 0)
x <- temp$Jaccard_index[temp$Nt_at_33 == T]
y <- temp$Jaccard_index[temp$Nt_at_33 == F]
p_vals_wmw <- c(p_vals_wmw, wilcox.test(x, y)$p.value)
# Wilcoxon-Mann Whitney effect size
effect_size_directions_wmw <- c(effect_size_directions_wmw, mean(x)-mean(y))
# Same Nt at 34
variables <- c(variables, "Nt at 34")
## Chi-square test for the proportion of 0s in each group
data <- table(as.numeric(!(DE_protein_overlaps$Jaccard_index == 0)), DE_protein_overlaps$Nt_at_34)
p_vals_chi_square <- c(p_vals_chi_square, chisq.test(data)$p.value)
## Proportion of 0s in each group
true_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$Nt_at_34 == T] == 0, na.rm = T)/
sum(DE_protein_overlaps$Nt_at_34 == T)
false_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$Nt_at_34 == F] == 0, na.rm = T)/
sum(DE_protein_overlaps$Nt_at_34 == F)
true_to_false_ratio <- true_group_zero_prop/false_group_zero_prop                         # This means the proportion of 0s in the False group is almost double that in the True group???
true_to_false_ratio_chi_square <- c(true_to_false_ratio_chi_square, true_to_false_ratio)
## Wilcoxon-Mann Whitney test for the non-zero values
temp <- DE_protein_overlaps %>%
filter(Jaccard_index != 0)
x <- temp$Jaccard_index[temp$Nt_at_34 == T]
y <- temp$Jaccard_index[temp$Nt_at_34 == F]
p_vals_wmw <- c(p_vals_wmw, wilcox.test(x, y)$p.value)
# Wilcoxon-Mann Whitney effect size
effect_size_directions_wmw <- c(effect_size_directions_wmw, mean(x)-mean(y))
# Same Nt at 35
variables <- c(variables, "Nt at 35")
## Chi-square test for the proportion of 0s in each group
data <- table(as.numeric(!(DE_protein_overlaps$Jaccard_index == 0)), DE_protein_overlaps$Nt_at_35)
p_vals_chi_square <- c(p_vals_chi_square, chisq.test(data)$p.value)
## Proportion of 0s in each group
true_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$Nt_at_35 == T] == 0, na.rm = T)/
sum(DE_protein_overlaps$Nt_at_35 == T)
false_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps$Nt_at_35 == F] == 0, na.rm = T)/
sum(DE_protein_overlaps$Nt_at_35 == F)
true_to_false_ratio <- true_group_zero_prop/false_group_zero_prop                         # This means the proportion of 0s in the False group is almost double that in the True group???
true_to_false_ratio_chi_square <- c(true_to_false_ratio_chi_square, true_to_false_ratio)
## Wilcoxon-Mann Whitney test for the non-zero values
temp <- DE_protein_overlaps %>%
filter(Jaccard_index != 0)
x <- temp$Jaccard_index[temp$Nt_at_35 == T]
y <- temp$Jaccard_index[temp$Nt_at_35 == F]
p_vals_wmw <- c(p_vals_wmw, wilcox.test(x, y)$p.value)
# Wilcoxon-Mann Whitney effect size
effect_size_directions_wmw <- c(effect_size_directions_wmw, mean(x)-mean(y))
# Bring the dataset with the p-values together
p_values_chisq_and_wmw <- data.frame(variables, p_vals_chi_square, true_to_false_ratio_chi_square, p_vals_wmw, effect_size_directions_wmw)
# Print this to LaTex
print(xtable(p_values_chisq_and_wmw, label = "p_values_table", digits = c(8)))
View(p_values_chisq_and_wmw)
df <- DE_protein_overlaps %>%
dplyr::select(same_amino_acid,
same_family,
same_chromosome,
same_amino_acid_and_chr,
same_family_and_chr,
same_aa_charge,
same_aa_type,
Nt_at_32,
Nt_at_32,
Nt_at_32,
Nt_at_32,
Nt_at_32,
Nt_at_32,)
perform_chi_square_and_wmw_return_pvalues_and_effect_sizes <- function(DE_protein_overlaps) {
# Create some vectors to collect the outcome
variables <- c()
p_vals_chi_square <- c()
true_to_false_ratio_chi_square <- c()
p_vals_wmw <- c()
effect_size_directions_wmw <- c()
# Iterate over the columns of the dataframe, performing the tests for each of them
columns <- colnames(DE_protein_overlaps)
columns <- columns[!columns %in% c("Jaccard_index")]
for (i in 1:length(columns)) {
# Save the name of the variable we are testing for
variable <- columns[i]
variables <- c(variables, variable)
## Chi-square test for the proportion of 0s in each group
data <- table(as.numeric(!(DE_protein_overlaps$Jaccard_index == 0)), DE_protein_overlaps[colnames(DE_protein_overlaps) == column])
p_vals_chi_square <- c(p_vals_chi_square, chisq.test(data)$p.value)
## Proportion of 0s in each group
true_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps[colnames(DE_protein_overlaps) == column] == T] == 0, na.rm = T)/
sum(DE_protein_overlaps[colnames(DE_protein_overlaps) == column] == T)
false_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps[colnames(DE_protein_overlaps) == column] == F] == 0, na.rm = T)/
sum(DE_protein_overlaps[colnames(DE_protein_overlaps) == column] == F)
true_to_false_ratio <- true_group_zero_prop/false_group_zero_prop                         # This means the proportion of 0s in the False group is almost double that in the True group???
true_to_false_ratio_chi_square <- c(true_to_false_ratio_chi_square, true_to_false_ratio)
## Wilcoxon-Mann Whitney test for the non-zero values
temp <- DE_protein_overlaps %>%
filter(Jaccard_index != 0)
x <- temp$Jaccard_index[temp[colnames(temp) == column] == T]
y <- temp$Jaccard_index[temp[colnames(temp) == column] == F]
p_vals_wmw <- c(p_vals_wmw, wilcox.test(x, y)$p.value)
# Wilcoxon-Mann Whitney effect size
effect_size_directions_wmw <- c(effect_size_directions_wmw, mean(x)-mean(y))
}
# Put it all together and return it
p_values_chisq_and_wmw <- data.frame(variables, p_vals_chi_square, true_to_false_ratio_chi_square, p_vals_wmw, effect_size_directions_wmw)
return(p_values_chisq_and_wmw)
}
df <- DE_protein_overlaps %>%
dplyr::select(same_amino_acid,
same_family,
same_chromosome,
same_amino_acid_and_chr,
same_family_and_chr,
same_aa_charge,
same_aa_type,
Nt_at_32,
Nt_at_33,
Nt_at_34,
Nt_at_35,
Nt_at_36,
Nt_at_37,
Nt_at_38)
test <- perform_chi_square_and_wmw_return_pvalues_and_effect_sizes(df)
perform_chi_square_and_wmw_return_pvalues_and_effect_sizes <- function(DE_protein_overlaps) {
# Create some vectors to collect the outcome
variables <- c()
p_vals_chi_square <- c()
true_to_false_ratio_chi_square <- c()
p_vals_wmw <- c()
effect_size_directions_wmw <- c()
# Iterate over the columns of the dataframe, performing the tests for each of them
columns <- colnames(DE_protein_overlaps)
columns <- columns[!columns %in% c("Jaccard_index")]
for (i in 1:length(columns)) {
# Save the name of the variable we are testing for
variable <- columns[i]
variables <- c(variables, variable)
## Chi-square test for the proportion of 0s in each group
data <- table(as.numeric(!(DE_protein_overlaps$Jaccard_index == 0)), DE_protein_overlaps[colnames(DE_protein_overlaps) == variable])
p_vals_chi_square <- c(p_vals_chi_square, chisq.test(data)$p.value)
## Proportion of 0s in each group
true_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps[colnames(DE_protein_overlaps) == variable] == T] == 0, na.rm = T)/
sum(DE_protein_overlaps[colnames(DE_protein_overlaps) == variable] == T)
false_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps[colnames(DE_protein_overlaps) == variable] == F] == 0, na.rm = T)/
sum(DE_protein_overlaps[colnames(DE_protein_overlaps) == variable] == F)
true_to_false_ratio <- true_group_zero_prop/false_group_zero_prop                         # This means the proportion of 0s in the False group is almost double that in the True group???
true_to_false_ratio_chi_square <- c(true_to_false_ratio_chi_square, true_to_false_ratio)
## Wilcoxon-Mann Whitney test for the non-zero values
temp <- DE_protein_overlaps %>%
filter(Jaccard_index != 0)
x <- temp$Jaccard_index[temp[colnames(temp) == variable] == T]
y <- temp$Jaccard_index[temp[colnames(temp) == variable] == F]
p_vals_wmw <- c(p_vals_wmw, wilcox.test(x, y)$p.value)
# Wilcoxon-Mann Whitney effect size
effect_size_directions_wmw <- c(effect_size_directions_wmw, mean(x)-mean(y))
}
# Put it all together and return it
p_values_chisq_and_wmw <- data.frame(variables, p_vals_chi_square, true_to_false_ratio_chi_square, p_vals_wmw, effect_size_directions_wmw)
return(p_values_chisq_and_wmw)
}
test <- perform_chi_square_and_wmw_return_pvalues_and_effect_sizes(df)
df <- DE_protein_overlaps %>%
dplyr::select(Jaccard_index,
same_amino_acid,
same_family,
same_chromosome,
same_amino_acid_and_chr,
same_family_and_chr,
same_aa_charge,
same_aa_type,
Nt_at_32,
Nt_at_33,
Nt_at_34,
Nt_at_35,
Nt_at_36,
Nt_at_37,
Nt_at_38)
test <- perform_chi_square_and_wmw_return_pvalues_and_effect_sizes(df)
i = 1
# Iterate over the columns of the dataframe, performing the tests for each of them
columns <- colnames(DE_protein_overlaps)
columns <- columns[!columns %in% c("Jaccard_index")]
for (i in 1:length(columns)) {
# Save the name of the variable we are testing for
variable <- columns[i]
variables <- c(variables, variable)
## Chi-square test for the proportion of 0s in each group
data <- table(as.numeric(!(DE_protein_overlaps$Jaccard_index == 0)), DE_protein_overlaps[colnames(DE_protein_overlaps) == variable])
p_vals_chi_square <- c(p_vals_chi_square, chisq.test(data)$p.value)
## Proportion of 0s in each group
true_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps[colnames(DE_protein_overlaps) == variable] == T] == 0, na.rm = T)/
sum(DE_protein_overlaps[colnames(DE_protein_overlaps) == variable] == T)
false_group_zero_prop <- sum(DE_protein_overlaps$Jaccard_index[DE_protein_overlaps[colnames(DE_protein_overlaps) == variable] == F] == 0, na.rm = T)/
sum(DE_protein_overlaps[colnames(DE_protein_overlaps) == variable] == F)
true_to_false_ratio <- true_group_zero_prop/false_group_zero_prop                         # This means the proportion of 0s in the False group is almost double that in the True group???
true_to_false_ratio_chi_square <- c(true_to_false_ratio_chi_square, true_to_false_ratio)
## Wilcoxon-Mann Whitney test for the non-zero values
temp <- DE_protein_overlaps %>%
filter(Jaccard_index != 0)
x <- temp$Jaccard_index[temp[colnames(temp) == variable] == T]
y <- temp$Jaccard_index[temp[colnames(temp) == variable] == F]
p_vals_wmw <- c(p_vals_wmw, wilcox.test(x, y)$p.value)
# Wilcoxon-Mann Whitney effect size
effect_size_directions_wmw <- c(effect_size_directions_wmw, mean(x)-mean(y))
}
# Iterate over the columns of the dataframe, performing the tests for each of them
columns <- colnames(DE_protein_overlaps)
columns <- columns[!columns %in% c("Jaccard_index")]
# Save the name of the variable we are testing for
variable <- columns[i]
DE_protein_overlaps[colnames(DE_protein_overlaps) == variable]
as.numeric(!(DE_protein_overlaps$Jaccard_index == 0)), DE_protein_overlaps[colnames(DE_protein_overlaps) == variable]
table(as.numeric(!(DE_protein_overlaps$Jaccard_index == 0)), DE_protein_overlaps[colnames(DE_protein_overlaps) == variable])
x = as.numeric(!(DE_protein_overlaps$Jaccard_index == 0))
y = DE_protein_overlaps[colnames(DE_protein_overlaps) == variable]
class(x)
class(y)
y = as.factor(DE_protein_overlaps[colnames(DE_protein_overlaps) == variable])
y = as.factor(DE_protein_overlaps[colnames(DE_protein_overlaps) == variable][,1])
y
y[,1]
as.character(y[,1])
y = as.factor(DE_protein_overlaps[,colnames(DE_protein_overlaps) == variable][,1])
