if (strain_name %in% strains_better_in_DTT) {
go_list_better_dtt[[strain_name]] <- go_results_list_001[[i]]
}
else if (strain_name %in% strains_worse_or_equal_in_DTT) {
go_list_worse_dtt[[strain_name]] <- go_results_list_001[[i]]
}
}
View(go_list_better_dtt)
View(de_proteins_list_001)
View(go_list_better_dtt)
go_terms_df_worse_dtt <- bind_rows(go_list_worse_dtt)
View(go_terms_df_worse_dtt)
View(go_terms_df_worse_dtt)
go_terms_df_worse_dtt <- bind_rows(go_list_worse_dtt) %>%
group_by(Description) %>%
summarise(n_terms = n())
View(go_terms_df_worse_dtt)
go_terms_df_better_dtt <- bind_rows(go_list_better_dtt) %>%
group_by(Description) %>%
summarise(n_terms = n())
temp <- go_terms_df_worse_dtt[order(-go_terms_df_worse_dtt$n_terms),]
temp <- temp[1:10,]
ggplot(data = , aes(x = n_terms)) +
geom_col() +
theme_light()
ggplot(data = temp, aes(x = n_terms)) +
geom_col() +
theme_light()
ggplot(data = temp, aes(x = Description, y = n_terms)) +
geom_col() +
theme_light()
library(forcats)
ggplot(data = temp, aes(x = fct_reorder(Description, n_terms), y = n_terms)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
check <- lapply(go_list_worse_dtt, add_strain_tag, names(go_list_worse_dtt), simplify = F)
add_strain_tag <- function(df, strain) {
df$Strain <- rep(strain, nrow(df))
return(df)
}
check <- lapply(go_list_worse_dtt, add_strain_tag, names(go_list_worse_dtt), simplify = F)
check <- lapply(go_list_worse_dtt, add_strain_tag, names(go_list_worse_dtt))
check <- mapply(go_list_worse_dtt, add_strain_tag, names(go_list_worse_dtt))
check <- lapply(go_list_worse_dtt, add_strain_tag, strain = names(go_list_worse_dtt))
View(go_list_better_dtt)
check <- mapply(FUN = add_strain_tag, df = go_list_worse_dtt, strain = names(go_list_worse_dtt))
View(check)
check <- mapply(FUN = add_strain_tag, df = go_list_worse_dtt, strain = names(go_list_worse_dtt), SIMPLIFY = F)
View(check)
View(go_list_worse_dtt)
library(data.table)
library(dplyr)
library(readODS)
library(stringr)
library(roxygen2)
library(stringi)
go_terms_df_worse_dtt <- bind_rows(go_list_worse_dtt)
df <- go_terms_df_worse_dtt
View(df)
column_name <- "Description"
terms <- unique(as.character(df[,colnames(df) == column_name]))
df <- df %>%
group_by(Description) %>%
count()
View(df)
df <- go_terms_df_worse_dtt
df <- df %>%
group_by(Description) %>%
mutate(term_count = count())
df <- df %>%
group_by(Description) %>%
mutate(term_count = count(Description))
temp <- df %>%
group_by(column_name) %>%
count()
temp <- df %>%
group_by(get(column_name)) %>%
count()
View(temp)
# Match to full dataset
colnames(temp) <- c(column_name, "Count")
df <- left_join(df, temp, by = column_name)
View(df)
View(go_terms_df_worse_dtt)
summarize_mine <- function(df, column_name) {
# Perform the count
temp <- df %>%
group_by(get(column_name)) %>%
count()
# Match to full dataset
colnames(temp) <- c(column_name, "Count")
df <- left_join(df, temp, by = column_name)
# Return output
return(df)
}
## Collapse list of dataframes into single dataframe and add a column with the count of Description
go_terms_df_worse_dtt <- bind_rows(go_list_worse_dtt) %>%
group_by(Description) %>%
summarise(n_terms = n())
View(go_terms_df_better_dtt)
## Collapse list of dataframes into single dataframe and add a column with the count of Description
go_terms_df_worse_dtt <- bind_rows(go_list_worse_dtt) %>%
summarize_mine(column_name = "Description")
View(go_terms_df_worse_dtt)
View(go_list_worse_dtt)
View(go_results_list_001)
summarize_mine <- function(df, column_name, output_column_name) {
# Perform the count
temp <- df %>%
group_by(get(column_name)) %>%
count()
# Match to full dataset
colnames(temp) <- c(column_name, output_column_name)
df <- left_join(df, temp, by = column_name)
# Return output
return(df)
}
## Collapse list of dataframes into single dataframe and add a column with the count of Description
go_terms_df_worse_dtt <- bind_rows(go_list_worse_dtt) %>%
summarize_mine(column_name = "Description", output_column_name = "EA_term_count")
View(go_terms_df_worse_dtt)
## Collapse list of dataframes into single dataframe and add a column with the count of Description
go_terms_df_worse_dtt <- bind_rows(go_list_worse_dtt) %>%
summarize_mine(column_name = "Description", output_column_name = "EA_term_count") %>%
arrange(EA_term_count)
## Collapse list of dataframes into single dataframe and add a column with the count of Description
go_terms_df_worse_dtt <- bind_rows(go_list_worse_dtt) %>%
summarize_mine(column_name = "Description", output_column_name = "EA_term_count") %>%
arrange(desc(EA_term_count))
temp <- go_terms_df_worse_dtt[1:10,]
ggplot(data = temp, aes(x = fct_reorder(Description, n_terms), y = n_terms)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_count)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
temp <- go_terms_df_worse_dtt %>%
distinct(Description) %>%
slice(10)
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_count)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
temp <- go_terms_df_worse_dtt %>%
distinct(Description, .keep_all = T) %>%
slice(10)
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_count)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
temp <- go_terms_df_worse_dtt %>%
distinct(Description, .keep_all = T) %>%
slice(1:10)
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_count)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
# For strains growing worse in DTT
## Add strain tag to each dataframe before collapsing
add_strain_tag <- function(df, strain) {
df$Strain <- rep(strain, nrow(df))
return(df)
}
go_list_worse_dtt <- mapply(FUN = add_strain_tag, df = go_list_worse_dtt, strain = names(go_list_worse_dtt), SIMPLIFY = F)
## Collapse list of dataframes into single dataframe and add a column with the count of Description
go_terms_df_worse_dtt <- bind_rows(go_list_worse_dtt) %>%
summarize_mine(column_name = "Description", output_column_name = "EA_term_count") %>%
arrange(desc(EA_term_count))
# For strains growing better in DTT
## Add strain tag to each dataframe before collapsing
go_list_better_dtt <- mapply(FUN = add_strain_tag, df = go_list_better_dtt, strain = names(go_list_better_dtt), SIMPLIFY = F)
## Collapse list of dataframes into single dataframe and add a column with the count of Description
go_terms_df_better_dtt <- bind_rows(go_list_better_dtt) %>%
summarize_mine(column_name = "Description", output_column_name = "EA_term_count") %>%
arrange(desc(EA_term_count))
## Collapse list of dataframes into single dataframe and add a column with the count of Description
go_terms_df_worse_dtt <- bind_rows(go_list_worse_dtt) %>%
summarize_mine(column_name = "Description", output_column_name = "EA_term_count") %>%
mutate(EA_term_percentage = EA_term_count/length(unique(Strain))) %>%
arrange(desc(EA_term_count))
# For strains growing worse in DTT
## Add strain tag to each dataframe before collapsing
add_strain_tag <- function(df, strain) {
df$Strain <- rep(strain, nrow(df))
return(df)
}
go_list_worse_dtt <- mapply(FUN = add_strain_tag, df = go_list_worse_dtt, strain = names(go_list_worse_dtt), SIMPLIFY = F)
## Collapse list of dataframes into single dataframe and add a column with the count of Description
go_terms_df_worse_dtt <- bind_rows(go_list_worse_dtt) %>%
summarize_mine(column_name = "Description", output_column_name = "EA_term_count") %>%
mutate(EA_term_percentage = EA_term_count/length(unique(Strain))) %>%
arrange(desc(EA_term_count))
# For strains growing better in DTT
## Add strain tag to each dataframe before collapsing
go_list_better_dtt <- mapply(FUN = add_strain_tag, df = go_list_better_dtt, strain = names(go_list_better_dtt), SIMPLIFY = F)
## Collapse list of dataframes into single dataframe and add a column with the count of Description
go_terms_df_better_dtt <- bind_rows(go_list_better_dtt) %>%
summarize_mine(column_name = "Description", output_column_name = "EA_term_count") %>%
mutate(EA_term_percentage = EA_term_count/length(unique(Strain))) %>%
arrange(desc(EA_term_count))
View(temp)
# For strains growing worse in DTT
## Grab only top 10 most common EA terms
temp <- go_terms_df_worse_dtt %>%
distinct(Description, .keep_all = T) %>%
slice(1:10)
## Plot with total EA term count
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_count, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "In strains growing worse than WT in DTT",
fill = "Ontology") +
ylab("Strain count") +
xlab("EA term")
# Plot with % - total EA term count/number of strains
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_count, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "In strains growing worse than WT in DTT",
fill = "Ontology") +
ylab("Strain percentage") +
xlab("EA term")
# For strains growing better in DTT
## Grab only top 10 most common EA terms
temp <- go_terms_df_better_dtt %>%
distinct(Description, .keep_all = T) %>%
slice(1:10)
## Plot with total EA term count
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_count, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing better than WT in DTT",
fill = "Ontology") +
ylab("Strain count") +
xlab("EA term")
# Plot with % - total EA term count/number of strains
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_count, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing worse than WT in DTT",
fill = "Ontology") +
ylab("Strain percentage") +
xlab("EA term")
# For strains growing worse in DTT
## Grab only top 10 most common EA terms
temp <- go_terms_df_worse_dtt %>%
distinct(Description, .keep_all = T) %>%
slice(1:10)
## Plot with total EA term count
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_count, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "In strains growing worse than WT in DTT",
fill = "Ontology") +
ylab("Strain count") +
xlab("EA term")
# Plot with % - total EA term count/number of strains
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_percentage, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "In strains growing worse than WT in DTT",
fill = "Ontology") +
ylab("Strain percentage") +
xlab("EA term")
# For strains growing better in DTT
## Grab only top 10 most common EA terms
temp <- go_terms_df_better_dtt %>%
distinct(Description, .keep_all = T) %>%
slice(1:10)
## Plot with total EA term count
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_count, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing better than WT in DTT",
fill = "Ontology") +
ylab("Strain count") +
xlab("EA term")
# Plot with % - total EA term count/number of strains
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_percentage, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing worse than WT in DTT",
fill = "Ontology") +
ylab("Strain percentage") +
xlab("EA term")
# For strains growing worse in DTT
## Grab only top 10 most common EA terms
temp <- go_terms_df_worse_dtt %>%
distinct(Description, .keep_all = T) %>%
slice(1:10)
## Plot with total EA term count
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_count, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing worse than WT in DTT",
fill = "Ontology") +
ylab("Strain count") +
xlab("EA term")
# Plot with % - total EA term count/number of strains
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_percentage, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing worse than WT in DTT",
fill = "Ontology") +
ylab("Strain percentage") +
xlab("EA term")
# For strains growing better in DTT
## Grab only top 10 most common EA terms
temp <- go_terms_df_better_dtt %>%
distinct(Description, .keep_all = T) %>%
slice(1:10)
## Plot with total EA term count
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_count, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing better than WT in DTT",
fill = "Ontology") +
ylab("Strain count") +
xlab("EA term")
# Plot with % - total EA term count/number of strains
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_percentage, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing worse than WT in DTT",
fill = "Ontology") +
ylab("Strain percentage") +
xlab("EA term")
View(de_prots_per_strain_001)
View(de_proteins_list_001)
View(go_results_list_001)
# Prepare dataframe
## Add strain tag to each dataframe before collapsing
add_strain_tag <- function(df, strain) {
df$Strain <- rep(strain, nrow(df))
return(df)
}
go_results_list_001 <- mapply(FUN = add_strain_tag, df = go_results_list_001, strain = names(go_results_list_001), SIMPLIFY = F)
## Collapse list of dataframes into single dataframe and add a column with the count of Description
go_terms_df_full <- bind_rows(go_results_list_001) %>%
summarize_mine(column_name = "Description", output_column_name = "EA_term_count") %>%
mutate(EA_term_percentage = EA_term_count/length(unique(Strain))) %>%
arrange(desc(EA_term_count))
# Plot
## Grab only top 10 most common EA terms
temp <- go_terms_df_full %>%
distinct(Description, .keep_all = T) %>%
slice(1:10)
## Plot with total EA term count
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_count, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing worse than WT in DTT",
fill = "Ontology") +
ylab("Strain count") +
xlab("EA term")
# Plot with % - total EA term count/number of strains
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_percentage, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing worse than WT in DTT",
fill = "Ontology") +
ylab("Strain percentage") +
xlab("EA term")
ea_only_worse <- setdiff(as.character(go_terms_df_worse_dtt$Description), as.character(go_terms_df_better_dtt$Description))
ea_only_better <- setdiff(as.character(go_terms_df_better_dtt$Description), as.character(go_terms_df_worse_dtt$Description))
ea_only_worse_df <- go_terms_df_worse_dtt[go_terms_df_worse_dtt$Description %in% ea_only_worse,]
ea_only_better <- go_terms_df_better_dtt[go_terms_df_better_dtt$Description %in% ea_only_better,]
# Filter the dataframes
ea_only_worse_df <- go_terms_df_worse_dtt[!(go_terms_df_worse_dtt$Description %in% go_terms_df_better_dtt$Description),]
ea_only_better <- go_terms_df_better_dtt[!(go_terms_df_better_dtt$Description %in% go_terms_df_better_dtt$Description),]
# Filter the dataframes
ea_only_worse_df <- go_terms_df_worse_dtt[!(go_terms_df_worse_dtt$Description %in% go_terms_df_better_dtt$Description),]
ea_only_better <- go_terms_df_better_dtt[!(go_terms_df_better_dtt$Description %in% go_terms_df_worse_dtt$Description),]
# Filter the dataframes
ea_only_worse_df <- go_terms_df_worse_dtt[!(go_terms_df_worse_dtt$Description %in% go_terms_df_better_dtt$Description),]
ea_only_better <- go_terms_df_better_dtt[!(go_terms_df_better_dtt$Description %in% go_terms_df_worse_dtt$Description),]
# Plot
# For strains growing worse in DTT
## Grab only top 10 most common EA terms
temp <- ea_only_worse_df %>%
distinct(Description, .keep_all = T) %>%
slice(1:10)
## Plot with total EA term count
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_count, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing worse than WT in DTT",
fill = "Ontology") +
ylab("Strain count") +
xlab("EA term")
# Plot with % - total EA term count/number of strains
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_percentage, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing worse than WT in DTT",
fill = "Ontology") +
ylab("Strain percentage") +
xlab("EA term")
# For strains growing better in DTT
## Grab only top 10 most common EA terms
temp <- ea_only_better %>%
distinct(Description, .keep_all = T) %>%
slice(1:10)
## Plot with total EA term count
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_count, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing better than WT in DTT",
fill = "Ontology") +
ylab("Strain count") +
xlab("EA term")
# Plot with % - total EA term count/number of strains
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_percentage, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing worse than WT in DTT",
fill = "Ontology") +
ylab("Strain percentage") +
xlab("EA term")
# Filter the dataframes
ea_only_worse_df <- go_terms_df_worse_dtt[!(go_terms_df_worse_dtt$Description %in% go_terms_df_better_dtt$Description),]
ea_only_better <- go_terms_df_better_dtt[!(go_terms_df_better_dtt$Description %in% go_terms_df_worse_dtt$Description),]
# Plot
# For strains growing worse in DTT
## Grab only top 10 most common EA terms
temp <- ea_only_worse_df %>%
distinct(Description, .keep_all = T) %>%
slice(1:15)
## Plot with total EA term count
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_count, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 60, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing worse than WT in DTT",
fill = "Ontology") +
ylab("Strain count") +
xlab("EA term")
# Plot with % - total EA term count/number of strains
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_percentage, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 60, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing worse than WT in DTT",
fill = "Ontology") +
ylab("Strain percentage") +
xlab("EA term")
# For strains growing better in DTT
## Grab only top 10 most common EA terms
temp <- ea_only_better %>%
distinct(Description, .keep_all = T) %>%
slice(1:15)
## Plot with total EA term count
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_count, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 60, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing better than WT in DTT",
fill = "Ontology") +
ylab("Strain count") +
xlab("EA term")
# Plot with % - total EA term count/number of strains
ggplot(data = temp, aes(x = fct_reorder(Description, EA_term_count), y = EA_term_percentage, fill = ONTOLOGY)) +
geom_col() +
theme_light() +
theme(axis.text.x = element_text(angle = 60, vjust = 1, hjust=1)) +
labs(title = "Most common EA terms",
subtitle = "Across strains growing worse than WT in DTT",
fill = "Ontology") +
ylab("Strain percentage") +
xlab("EA term")
