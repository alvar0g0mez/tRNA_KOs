theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(data = high_jaccard_df, aes(x = reorder(both_aa_types, value))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(data = high_jaccard_df, aes(x = fct_infreq(both_aa_types))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
library(forcats)
ggplot(data = high_jaccard_df, aes(x = fct_infreq(both_aa_types))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(both_aa_types)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(both_aa_types)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Distribution of the KO strain pairs with a JC > 0.5",
subtitle = "Classified based on amino acid type") +
xlab("Amino acid type") +
ylab("Count")
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(both_aa_types)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Distribution of the KO strain pairs with a JC > 0.5",
subtitle = "Classified based on amino acid types of the 2 KOs") +
xlab("Amino acid types") +
ylab("Count")
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(both_aa_charges)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Distribution of the KO strain pairs with a JC > 0.5",
subtitle = "Classified based on amino acid charges of the 2 KOs") +
xlab("Amino acid charges") +
ylab("Count")
sort(table(high_jaccard_df$strains_1))
sort(table(high_jaccard_df$strains_2))
197*196
sort(table(high_jaccard_df$both_anticodons))
sort(table(high_jaccard_df$both_amino_acids))
View(responsiveness)
sort(table(high_jaccard_df$strains_1))
sort(table(high_jaccard_df$strains_2))
if (alpha == 0.01) {
DE_protein_overlaps <- as.data.frame(fread(paste(base_dir, "Data/Other/compare_DEPs_across_KOs/DE_protein_overlaps_001.tsv", sep="")))
}
if (alpha == 0.05) {
DE_protein_overlaps <- as.data.frame(fread(paste(base_dir, "Data/Other/compare_DEPs_across_KOs/DE_protein_overlaps_005.tsv", sep="")))
}
ggplot(data = DE_protein_overlaps, aes(x = protein_number_1, y = overlap_size)) +
geom_point() +
theme_light()
ggplot(data = DE_protein_overlaps, aes(x = protein_number_2, y = overlap_size)) +
geom_point() +
theme_light()
ggplot(data = DE_protein_overlaps, aes(x = Jaccard_index)) +
geom_histogram(alpha = 0.7) +
theme_light() +
xlab("Jaccard index") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = "For all possible pairs of KO strains")
ggplot(data = DE_protein_overlaps, aes(x = log2(Jaccard_index))) +
geom_histogram(alpha = 0.7) +
theme_light() +
xlab("log2(Jaccard index)") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = "For all possible pairs of KO strains")
ggplot(data = DE_protein_overlaps, aes(x = log2(Jaccard_index), fill = same_family)) +
geom_histogram(alpha = 0.7) +
theme_light() +
xlab("log2(Jaccard index)") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = "For all possible pairs of KO strains",
fill = "Same family?") +
scale_fill_viridis_d()
ggplot(data = DE_protein_overlaps, aes(x = log2(Jaccard_index), fill = same_amino_acid)) +
geom_histogram(alpha = 0.7) +
theme_light() +
xlab("log2(Jaccard index)") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = "For all possible pairs of KO strains",
fill = "Same amino acid?") +
scale_fill_viridis_d()
ggplot(data = DE_protein_overlaps, aes(x = log2(Jaccard_index), fill = same_chromosome)) +
geom_histogram(alpha = 0.7) +
theme_light() +
xlab("log2(Jaccard index)") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = "For all possible pairs of KO strains",
fill = "Same chromosome?") +
scale_fill_viridis_d()
ggplot(data = DE_protein_overlaps, aes(x = log2(Jaccard_index), fill = same_family_and_chr)) +
geom_histogram(alpha = 0.7) +
theme_light() +
xlab("log2(Jaccard index)") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = "For all possible pairs of KO strains",
fill = "Same family and\nchromosome?") +
scale_fill_viridis_d()
ggplot(data = DE_protein_overlaps, aes(x = log2(Jaccard_index), fill = same_amino_acid_and_chr)) +
geom_histogram(alpha = 0.7) +
theme_light() +
xlab("log2(Jaccard index)") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = "For all possible pairs of KO strains",
fill = "Same amino acid and\nchromosome?") +
scale_fill_viridis_d()
ggplot(data = subset(DE_protein_overlaps, overlap_size > 0), aes(x = Jaccard_index)) +
geom_histogram(alpha = 0.7, binwidth = 0.01) +
theme_light() +
xlab("Jaccard_index") +
ylab("Count") +
labs(title = "Histogram of Jaccard_index of the DE proteins",
subtitle = "For all possible pairs of KO strains")
ggplot(data = DE_protein_overlaps, aes(x = log2(Jaccard_index), fill = Strain_more_DEPs, group = Strain_more_DEPs)) +
geom_histogram(alpha = 0.7) +
theme_light() +
xlab("log2(Jaccard index)") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = "For all possible pairs of KO strains",
fill = "DEPs in strain\nwith more DEPs") +
scale_fill_viridis_c()
ggplot(data = DE_protein_overlaps, aes(x = log2(Jaccard_index), fill = Strain_less_DEPs, group = Strain_less_DEPs)) +
geom_histogram(alpha = 0.7) +
theme_light() +
xlab("log2(Jaccard index)") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = "For all possible pairs of KO strains",
fill = "DEPs in strain\nwith less DEPs") +
scale_fill_viridis_c()
ggplot(data = DE_protein_overlaps, aes(x = log2(Jaccard_index), fill = log2(Ratio_more_to_less_DEPs), group = log2(Ratio_more_to_less_DEPs))) +
geom_histogram(alpha = 0.7) +
theme_light() +
xlab("log2(Jaccard index)") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = "For all possible pairs of KO strains",
fill = "nDEP ratio -\nlarger/smaller") +
scale_fill_viridis_c()
plot_list <- list()
anticodons <- unique(responsiveness$anticodon)
for (i in 1:length(anticodons)) {
anticodon <- anticodons[i]
temp <- DE_protein_overlaps %>%
filter(anticodon_1 == anticodon & anticodon_2 == anticodon)
plot_list[[i]] <- ggplot(data = temp, aes(x = Jaccard_index)) +
geom_histogram(alpha = 0.7, binwidth = 1) +
theme_light() +
xlab("Jaccard index") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = glue("For strains with {anticodon} anticodon")) +
scale_fill_viridis_d()
}
## List of ggplot objects has to be turned to list of grobs for grid.arrange to work
my_grobs <- lapply(plot_list, ggplotGrob)
## Print to PDF
output_file = paste(base_dir, "Output/Plots/compare_DEPs_across_KOs/histograms/Jaccard_index_per_family.pdf", sep = "")
ggsave(
filename = output_file,
plot = marrangeGrob(my_grobs, nrow=4, ncol=4),
width = 15, height = 9
)
plot_list <- list()
aas <- unique(responsiveness$Amino_acid_1_letter)
for (i in 1:length(aas)) {
aa <- aas[i]
temp <- DE_protein_overlaps %>%
filter(Amino_acid_1 == aa & Amino_acid_2 == aa)
plot_list[[i]] <- ggplot(data = temp, aes(x = Jaccard_index)) +
geom_histogram(alpha = 0.7, binwidth = 1) +
theme_light() +
xlab("Jaccard index") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = glue("For strains carrying {aa}")) +
scale_fill_viridis_d()
}
## List of ggplot objects has to be turned to list of grobs for grid.arrange to work
my_grobs <- lapply(plot_list, ggplotGrob)
## Print to PDF
output_file = paste(base_dir, "Output/Plots/compare_DEPs_across_KOs/histograms/Jaccard_index_per_amino_acid.pdf", sep = "")
ggsave(
filename = output_file,
plot = marrangeGrob(my_grobs, nrow=4, ncol=4),
width = 15, height = 9
)
# Subset the dataframe
high_jaccard_df <- DE_protein_overlaps %>%
filter(Jaccard_index >= 0.2)
# Look at the strains in this subset of the data
sort(table(high_jaccard_df$strains_1))
sort(table(high_jaccard_df$strains_2))
# Look at the anticodons and amino acids in this subset of the data
sort(table(high_jaccard_df$both_anticodons))
sort(table(high_jaccard_df$both_amino_acids))
# Look at the amino acid types and charges in this subset of the data
sort(table(high_jaccard_df$both_aa_types))
sort(table(high_jaccard_df$both_aa_charges))
# Barplot of these strains by amino acid types
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(both_aa_types)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Distribution of the KO strain pairs with a JC > 0.5",
subtitle = "Classified based on amino acid types of the 2 KOs") +
xlab("Amino acid types") +
ylab("Count")
# Barplot of these strains by amino acid charges
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(both_aa_charges)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Distribution of the KO strain pairs with a JC > 0.5",
subtitle = "Classified based on amino acid charges of the 2 KOs") +
xlab("Amino acid charges") +
ylab("Count")
# Subset the dataframe
high_jaccard_df <- DE_protein_overlaps %>%
filter(Jaccard_index >= 0.4)
# Look at the strains in this subset of the data
sort(table(high_jaccard_df$strains_1))
sort(table(high_jaccard_df$strains_2))
# Look at the anticodons and amino acids in this subset of the data
sort(table(high_jaccard_df$both_anticodons))
sort(table(high_jaccard_df$both_amino_acids))
# Look at the amino acid types and charges in this subset of the data
sort(table(high_jaccard_df$both_aa_types))
sort(table(high_jaccard_df$both_aa_charges))
# Barplot of these strains by amino acid types
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(both_aa_types)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Distribution of the KO strain pairs with a JC > 0.5",
subtitle = "Classified based on amino acid types of the 2 KOs") +
xlab("Amino acid types") +
ylab("Count")
# Barplot of these strains by amino acid charges
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(both_aa_charges)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Distribution of the KO strain pairs with a JC > 0.5",
subtitle = "Classified based on amino acid charges of the 2 KOs") +
xlab("Amino acid charges") +
ylab("Count")
# Subset the dataframe
high_jaccard_df <- DE_protein_overlaps %>%
filter(Jaccard_index >= 0.5)
# Look at the strains in this subset of the data
sort(table(high_jaccard_df$strains_1))
sort(table(high_jaccard_df$strains_2))
# Look at the anticodons and amino acids in this subset of the data
sort(table(high_jaccard_df$both_anticodons))
sort(table(high_jaccard_df$both_amino_acids))
# Look at the amino acid types and charges in this subset of the data
sort(table(high_jaccard_df$both_aa_types))
sort(table(high_jaccard_df$both_aa_charges))
# Barplot of these strains by amino acid types
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(both_aa_types)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Distribution of the KO strain pairs with a JC > 0.5",
subtitle = "Classified based on amino acid types of the 2 KOs") +
xlab("Amino acid types") +
ylab("Count")
# Barplot of these strains by amino acid charges
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(both_aa_charges)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Distribution of the KO strain pairs with a JC > 0.5",
subtitle = "Classified based on amino acid charges of the 2 KOs") +
xlab("Amino acid charges") +
ylab("Count")
# Barplot of these strains by whether they have the same anticodon
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(same_family)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Distribution of the KO strain pairs with a JC > 0.5",
subtitle = "Classified based on amino acid charges of the 2 KOs") +
xlab("Same family?") +
ylab("Count")
# Subset the dataframe
high_jaccard_df <- DE_protein_overlaps %>%
filter(Jaccard_index >= 0.5) %>%
mutate(same_family = case_when(same_family == T ~ "Yes",
TRUE ~ "No"),
same_amino_acid = case_when(same_amino_acid == T ~ "Yes",
TRUE ~ "No"))
# Barplot of these strains by whether they have the same anticodon
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(same_family)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Distribution of the KO strain pairs with a JC > 0.5",
subtitle = "Classified based on amino acid charges of the 2 KOs") +
xlab("Same family?") +
ylab("Count")
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(same_family)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Distribution of the KO strain pairs with a JC > 0.5",
subtitle = "Classified based on whether the 2 KOs were for the same anticodon") +
xlab("Same family?") +
ylab("Count")
# Barplot of these strains by whether they carry the same amino acid
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(same_amino_acid)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Distribution of the KO strain pairs with a JC > 0.5",
subtitle = "Classified based on whether the 2 KOs were for tRNAs carrying the same amino acid") +
xlab("Same amino acid?") +
ylab("Count")
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(same_family)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Distribution of the KO strain pairs with a Jaccard Index > 0.5",
subtitle = "Classified based on whether the 2 KOs were for the same anticodon") +
xlab("Same family?") +
ylab("Count")
# Barplot of these strains by whether they carry the same amino acid
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(same_amino_acid)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Distribution of the KO strain pairs with a Jaccard Index > 0.5",
subtitle = "Classified based on whether the 2 KOs were for tRNAs carrying the same amino acid") +
xlab("Same amino acid?") +
ylab("Count")
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(both_aa_types)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Distribution of the KO strain pairs with a Jaccard Index > 0.5",
subtitle = "Classified based on amino acid types of the 2 KOs") +
xlab("Amino acid types") +
ylab("Count")
# Barplot of these strains by amino acid charges
ggplot(data = high_jaccard_df, aes(x = fct_rev(fct_infreq(both_aa_charges)))) +
geom_bar() +
theme_light() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(title = "Distribution of the KO strain pairs with a Jaccard Index > 0.5",
subtitle = "Classified based on amino acid charges of the 2 KOs") +
xlab("Amino acid charges") +
ylab("Count")
ggplot(data = DE_protein_overlaps, aes(x = log2(Jaccard_index), fill = both_aa_types)) +
geom_histogram(alpha = 0.7) +
theme_light() +
xlab("log2(Jaccard index)") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = "For all possible pairs of KO strains",
fill = "Same amino acid?") +
scale_fill_viridis_d()
ggplot(data = DE_protein_overlaps, aes(x = both_aa_types, y = log2(Jaccard_index), fill = both_aa_types)) +
geom_boxplot() +
theme_light() +
xlab("log2(Jaccard index)") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = "For all possible pairs of KO strains",
fill = "Same amino acid?") +
scale_fill_viridis_d()
ggplot(data = DE_protein_overlaps, aes(x = both_aa_types, y = log2(Jaccard_index), fill = both_aa_types)) +
geom_boxplot() +
theme_light() +
xlab("log2(Jaccard index)") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = "For all possible pairs of KO strains") +
scale_fill_viridis_d() +
theme(legend.position = "none")
ggplot(data = DE_protein_overlaps, aes(x = both_aa_types, y = log2(Jaccard_index), fill = both_aa_types)) +
geom_boxplot() +
theme_light() +
xlab("log2(Jaccard index)") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = "For all possible pairs of KO strains") +
scale_fill_viridis_d() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(data = DE_protein_overlaps, aes(x = both_aa_types, y = Jaccard_index, fill = both_aa_types)) +
geom_boxplot() +
theme_light() +
xlab("log2(Jaccard index)") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = "For all possible pairs of KO strains") +
scale_fill_viridis_d() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(data = DE_protein_overlaps, aes(x = both_aa_types, y = log2(Jaccard_index), fill = both_aa_types)) +
geom_boxplot() +
theme_light() +
xlab("log2(Jaccard index)") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = "For all possible pairs of KO strains") +
scale_fill_viridis_d() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(data = DE_protein_overlaps, aes(x = both_aa_charges, y = log2(Jaccard_index), fill = both_aa_charges)) +
geom_boxplot() +
theme_light() +
xlab("log2(Jaccard index)") +
ylab("Count") +
labs(title = "Histogram of Jaccard index of the DE proteins",
subtitle = "For all possible pairs of KO strains") +
scale_fill_viridis_d() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(data = DE_protein_overlaps, aes(x = both_aa_types, y = log2(Jaccard_index), fill = both_aa_types)) +
geom_boxplot() +
theme_light() +
xlab("Amino acid types") +
ylab("log2(Jaccard index)") +
labs(title = "Boxplots of the Jaccard Index values for all pairs of KO strains",
subtitle = "Classified by the type of the amino acids carried by the KOd tRNAs") +
scale_fill_viridis_d() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(data = DE_protein_overlaps, aes(x = both_aa_charges, y = log2(Jaccard_index), fill = both_aa_charges)) +
geom_boxplot() +
theme_light() +
xlab("Amino acid charges") +
ylab("log2(Jaccard index)") +
labs(title = "Boxplots of the Jaccard Index values for all pairs of KO strains",
subtitle = "Classified by the charges of the amino acids carried by the KOd tRNAs") +
scale_fill_viridis_d() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
# Come up with columns that require matching between these 2 sets of them
DE_protein_overlaps <- DE_protein_overlaps %>%
mutate(same_family = anticodon_1 == anticodon_2,
same_amino_acid = Amino_acid_1 == Amino_acid_2,
same_chromosome = chr_1 == chr_2,
same_family_and_chr = same_family&same_chromosome,
same_amino_acid_and_chr = same_amino_acid&same_chromosome,
same_aa_type = aa_type_1 == aa_type_2,
same_aa_charge = aa_charge_1 == aa_charge_2)
if (alpha == 0.01) {
fwrite(DE_protein_overlaps, paste(base_dir, "Data/Other/compare_DEPs_across_KOs/DE_protein_overlaps_001.tsv", sep=""))
}
if (alpha == 0.05) {
fwrite(DE_protein_overlaps, paste(base_dir, "Data/Other/compare_DEPs_across_KOs/DE_protein_overlaps_005.tsv", sep=""))
}
ggplot(data = DE_protein_overlaps, aes(x = as.character(same_aa_charge), y = log2(Jaccard_index), fill = as.character(same_aa_charge))) +
geom_boxplot() +
theme_light() +
xlab("Amino acid charges") +
ylab("log2(Jaccard index)") +
labs(title = "Boxplots of the Jaccard Index values for all pairs of KO strains",
subtitle = "Classified by the charges of the amino acids carried by the KOd tRNAs") +
scale_fill_viridis_d() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(data = DE_protein_overlaps, aes(x = as.character(same_aa_type), y = log2(Jaccard_index), fill = as.character(same_aa_type))) +
geom_boxplot() +
theme_light() +
xlab("Same amino acid type?") +
ylab("log2(Jaccard index)") +
labs(title = "Boxplots of the Jaccard Index values for all pairs of KO strains",
subtitle = "Classified by the charges of the amino acids carried by the KOd tRNAs") +
scale_fill_viridis_d() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(data = DE_protein_overlaps, aes(x = as.character(same_aa_charge), y = log2(Jaccard_index), fill = as.character(same_aa_charge))) +
geom_boxplot() +
theme_light() +
xlab("Same amino acid charge?") +
ylab("log2(Jaccard index)") +
labs(title = "Boxplots of the Jaccard Index values for all pairs of KO strains",
subtitle = "Classified by whether carried amino acids have the same charge") +
scale_fill_viridis_d() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(data = DE_protein_overlaps, aes(x = as.character(same_aa_type), y = log2(Jaccard_index), fill = as.character(same_aa_type))) +
geom_boxplot() +
theme_light() +
xlab("Same amino acid type?") +
ylab("log2(Jaccard index)") +
labs(title = "Boxplots of the Jaccard Index values for all pairs of KO strains",
subtitle = "Classified by whether the carried amino acids are of the same type") +
scale_fill_viridis_d() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
