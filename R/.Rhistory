if (working_from == "home") {
base_dir = "/home/alvaro/MyStuff/"
} else
if (working_from == "charite") {
base_dir = "C:/MyStuff/"
}
# Protein abundances - limpa output
y.protein <- readRDS(paste(base_dir, "tRNA_KOs/Data/limpa_analysis/y.protein.rds", sep=""))
trna_ko <- as.data.frame(y.protein$E)
rm(y.protein)
# Sample layout
sample_layout <- as.data.frame(fread(paste(base_dir, "tRNA_KOs/Data/basic/sample_layout_alvaro.tsv", sep="")))
# Import the functions I have created in another file
source(paste(base_dir, "tRNA_KOs/Code/R/Mine/0.general_use_functions.R", sep=""))
hist(trna_ko)
View(trna_ko)
colnames(trna_ko)
# Heatmap on the original log2 proteomics data
mat <- as.matrix(trna_ko)
hist(mat)
# Heatmap on the original log2 proteomics data
mat <- 2^(as.matrix(trna_ko))
hist(mat)
mat_zscore = t(apply(trna_ko, 1, function(x) (x-median(x, na.rm = T))/mad(x, na.rm = T)))
col_fun = colorRamp2(c(-4, -2, 0, 2, 4), c("blue", "blue", "white", "red", "red"))
Heatmap(mat_zscore,
name = "Heatmap",
#col = col_fun,
na_col = "green",
row_title = "Proteins",
column_title = "Samples",
#column_labels = grepl("QC", colnames(mat_zscore)),
#cluster_rows = FALSE,                  # Turn row clustering off, I assume we already know the relationships between the genes
column_dend_height = unit(2, "cm"),
show_row_names = FALSE,
column_names_gp = gpar(fontsize = 5))
pdf(paste(base_dir, "tRNA_KOs/Output/Plots/Heatmaps/heatmap_z_score_", alpha_plain, "_logFC_", as.character(lfc_threshold), ".pdf", sep = ""))
Heatmap(mat_zscore,
name = "Heatmap",
#col = col_fun,
na_col = "green",
row_title = "Proteins",
column_title = "Samples",
#column_labels = grepl("QC", colnames(mat_zscore)),
#cluster_rows = FALSE,                  # Turn row clustering off, I assume we already know the relationships between the genes
column_dend_height = unit(2, "cm"),
show_row_names = FALSE,
column_names_gp = gpar(fontsize = 5))
dev.off()
## Samples ordered based on families
ordered_samples <- sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(trna_ko)) %>%
dplyr::pull(final_proteomics_colnames)
ordered_samples
mat_ordered <- mat[, ordered_samples]
ordered_samples <- sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(trna_ko)) %>%
dplyr::pull(final_proteomics_colnames)
mat_ordered <- mat[, ordered_samples]
### Create Heatmap Annotation
col_anno <- HeatmapAnnotation(
Group = sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(trna_ko)) %>%
dplyr::pull(final_proteomics_colnames),
col = list(Group = structure(
RColorBrewer::brewer.pal(length(unique(sample_layout$final_proteomics_colnames)), "Set1"),
names = unique(sample_layout$final_proteomics_colnames)
))
)
ordered_samples <- sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(trna_ko)) %>%
dplyr::pull(final_proteomics_colnames)
mat_ordered <- mat[, ordered_samples]
### Create Heatmap Annotation
col_anno <- HeatmapAnnotation(
Group = sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(trna_ko)) %>%
dplyr::pull(final_proteomics_colnames),
col = list(Group = structure(
RColorBrewer::brewer.pal(length(unique(sample_layout$Amino_acid_1_letter)), "Set1"),
names = unique(sample_layout$Amino_acid_1_letter)
))
)
ordered_samples <- sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(trna_ko)) %>%
dplyr::pull(final_proteomics_colnames)
mat_ordered <- mat[, ordered_samples]
### Create Heatmap Annotation
#### Arrange and extract grouping variable (amino acid carried)
group_vals <- sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(trna_ko)) %>%
dplyr::pull(Amino_acid_1_letter)
group_levels <- unique(group_vals)
#### Generate viridis colors
group_colors <- viridis(length(group_levels))
library(viridisLite)
ordered_samples <- sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(trna_ko)) %>%
dplyr::pull(final_proteomics_colnames)
mat_ordered <- mat[, ordered_samples]
### Create Heatmap Annotation
#### Arrange and extract grouping variable (amino acid carried)
group_vals <- sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(trna_ko)) %>%
dplyr::pull(Amino_acid_1_letter)
group_levels <- unique(group_vals)
#### Generate viridis colors
group_colors <- viridis(length(group_levels))
names(group_colors) <- group_levels
#### Create the column annotation
col_anno <- HeatmapAnnotation(
Group = group_vals,
col = list(Group = group_colors)
)
pdf(paste(base_dir, "tRNA_KOs/Output/Plots/Heatmaps/heatmap_z_score_ordered_samples", alpha_plain, "_logFC_", as.character(lfc_threshold), ".pdf", sep = ""))
Heatmap(mat_zscore,
name = "Heatmap",
#col = col_fun,
na_col = "green",
top_annotation = col_anno,
row_title = "Proteins",
column_title = "Samples",
#column_labels = grepl("QC", colnames(mat_zscore)),
#cluster_rows = FALSE,                  # Turn row clustering off, I assume we already know the relationships between the genes
column_dend_height = unit(2, "cm"),
show_row_names = FALSE,
column_names_gp = gpar(fontsize = 5))
dev.off()
pdf(paste(base_dir, "tRNA_KOs/Output/Plots/Heatmaps/heatmap_z_score_ordered_samples_", alpha_plain, "_logFC_", as.character(lfc_threshold), ".pdf", sep = ""))
Heatmap(mat_zscore,
name = "Heatmap",
na_col = "green",
top_annotation = col_anno,
row_title = "Proteins",
column_title = "Samples",
cluster_columns = F,
show_column_dend = F,
show_row_names = FALSE,
column_names_gp = gpar(fontsize = 2))
dev.off()
pdf(paste(base_dir, "tRNA_KOs/Output/Plots/Heatmaps/heatmap_z_score_ordered_samples_", alpha_plain, "_logFC_", as.character(lfc_threshold), ".pdf", sep = ""))
Heatmap(mat_zscore,
name = "Heatmap",
na_col = "green",
top_annotation = col_anno,
row_title = "Proteins",
column_title = "Samples",
cluster_columns = F,
show_column_dend = F,
show_row_names = FALSE,
column_names_gp = gpar(fontsize = 0.5))
dev.off()
ordered_samples <- sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(trna_ko)) %>%
dplyr::pull(final_proteomics_colnames)
mat_ordered <- mat[, ordered_samples]
### Create Heatmap Annotation
#### Arrange and extract grouping variable (amino acid carried)
group_vals <- sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(trna_ko)) %>%
dplyr::pull(Amino_acid_1_letter)
group_levels <- unique(group_vals)
#### Generate viridis colors
group_colors <- plasma(length(group_levels))
names(group_colors) <- group_levels
#### Create the column annotation
col_anno <- HeatmapAnnotation(
Group = group_vals,
col = list(Group = group_colors)
)
### Create the Heatmap
pdf(paste(base_dir, "tRNA_KOs/Output/Plots/Heatmaps/heatmap_z_score_ordered_samples_", alpha_plain, "_logFC_", as.character(lfc_threshold), ".pdf", sep = ""))
Heatmap(mat_zscore,
name = "Heatmap",
na_col = "green",
top_annotation = col_anno,
row_title = "Proteins",
column_title = "Samples",
cluster_columns = F,
show_column_dend = F,
show_row_names = FALSE,
column_names_gp = gpar(fontsize = 0.1),             # size of X axis labels
row_dend_gp = gpar(lwd = 0.5))                      # thinner dendrogram lines Y axis
dev.off()
pdf(paste(base_dir, "tRNA_KOs/Output/Plots/Heatmaps/heatmap_z_score_ordered_samples_", alpha_plain, "_logFC_", as.character(lfc_threshold), ".pdf", sep = ""))
Heatmap(mat_zscore,
name = "Heatmap",
na_col = "green",
top_annotation = col_anno,
row_title = "Proteins",
column_title = "Samples",
cluster_columns = F,
show_column_dend = F,
show_row_names = FALSE,
column_names_gp = gpar(fontsize = 0.25),             # size of X axis labels
row_dend_gp = gpar(lwd = 0.5))                      # thinner dendrogram lines Y axis
dev.off()
pdf(paste(base_dir, "tRNA_KOs/Output/Plots/Heatmaps/heatmap_z_score_ordered_samples_", alpha_plain, "_logFC_", as.character(lfc_threshold), ".pdf", sep = ""))
Heatmap(mat_zscore,
name = "Heatmap",
na_col = "green",
top_annotation = col_anno,
row_title = "Proteins",
column_title = "Samples",
cluster_columns = F,
show_column_dend = F,
show_row_names = FALSE,
show_column_names = T,
column_names_gp = gpar(fontsize = 0.25),             # size of X axis labels
row_dend_gp = gpar(lwd = 0.5))                      # thinner dendrogram lines Y axis
dev.off()
pdf(paste(base_dir, "tRNA_KOs/Output/Plots/Heatmaps/heatmap_z_score_ordered_samples_", alpha_plain, "_logFC_", as.character(lfc_threshold), ".pdf", sep = ""))
Heatmap(mat_zscore,
name = "Heatmap",
na_col = "green",
top_annotation = col_anno,
row_title = "Proteins",
column_title = "Samples",
cluster_columns = F,
show_column_dend = F,
show_row_names = FALSE,
show_column_names = T,
column_names_gp = gpar(fontsize = 0.5),             # size of X axis labels
row_dend_gp = gpar(lwd = 0.5))                      # thinner dendrogram lines Y axis
dev.off()
colnames(mat_ordered)
ordered_samples <- sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(trna_ko)) %>%
dplyr::pull(final_proteomics_colnames)
mat_ordered <- mat[, ordered_samples]
sample_layout_ordered <- sample_layout %>%
dplyr::filter(final_proteomics_colnames %in% colnames(mat_ordered)) %>%
slice(match(colnames(mat_ordered), final_proteomics_colnames))
ordered_samples <- sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(trna_ko)) %>%
dplyr::pull(final_proteomics_colnames)
mat_ordered <- mat[, ordered_samples]
sample_layout_ordered <- sample_layout %>%
dplyr::filter(final_proteomics_colnames %in% colnames(mat_ordered)) %>%
dplyr::slice(match(colnames(mat_ordered), final_proteomics_colnames))
ordered_samples <- sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(trna_ko)) %>%
dplyr::pull(final_proteomics_colnames)
mat_ordered <- mat[, ordered_samples]
sample_layout_ordered <- sample_layout %>%
dplyr::filter(final_proteomics_colnames %in% colnames(mat_ordered)) %>%
dplyr::slice(match(colnames(mat_ordered), final_proteomics_colnames))
### Create Heatmap Annotation
#### Arrange and extract grouping variable (amino acid carried)
group_vals <- sample_layout_ordered$Amino_acid_1_letter
group_levels <- unique(group_vals)
#### Generate viridis colors
group_colors <- plasma(length(group_levels))
names(group_colors) <- group_levels
#### Create the column annotation
col_anno <- HeatmapAnnotation(
Group = group_vals,
col = list(Group = group_colors)
)
### Create the Heatmap
pdf(paste(base_dir, "tRNA_KOs/Output/Plots/Heatmaps/heatmap_z_score_ordered_samples_", alpha_plain, "_logFC_", as.character(lfc_threshold), ".pdf", sep = ""))
Heatmap(mat_zscore,
name = "Heatmap",
na_col = "green",
top_annotation = col_anno,
row_title = "Proteins",
column_title = "Samples",
cluster_columns = F,
show_column_dend = F,
show_row_names = FALSE,
show_column_names = T,
column_names_gp = gpar(fontsize = 0.5),             # size of X axis labels
row_dend_gp = gpar(lwd = 0.5))                      # thinner dendrogram lines Y axis
dev.off()
ordered_samples <- sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(mat_zscore)) %>%
dplyr::pull(final_proteomics_colnames)
mat_ordered <- mat_zscore[, ordered_samples]
sample_layout_ordered <- sample_layout %>%
dplyr::filter(final_proteomics_colnames %in% colnames(mat_ordered)) %>%
dplyr::slice(match(colnames(mat_ordered), final_proteomics_colnames))
### Create Heatmap Annotation
#### Arrange and extract grouping variable (amino acid carried)
group_vals <- sample_layout_ordered$Amino_acid_1_letter
group_levels <- unique(group_vals)
#### Generate viridis colors
group_colors <- plasma(length(group_levels))
names(group_colors) <- group_levels
#### Create the column annotation
col_anno <- HeatmapAnnotation(
Group = group_vals,
col = list(Group = group_colors)
)
### Create the Heatmap
pdf(paste(base_dir, "tRNA_KOs/Output/Plots/Heatmaps/heatmap_z_score_ordered_samples_", alpha_plain, "_logFC_", as.character(lfc_threshold), ".pdf", sep = ""))
Heatmap(mat_ordered,
name = "Heatmap",
na_col = "green",
top_annotation = col_anno,
row_title = "Proteins",
column_title = "Samples",
cluster_columns = F,
show_column_dend = F,
show_row_names = FALSE,
show_column_names = T,
column_names_gp = gpar(fontsize = 0.5),             # size of X axis labels
row_dend_gp = gpar(lwd = 0.5))                      # thinner dendrogram lines Y axis
dev.off()
dummy_df <- data.frame(x = c(94, 34), y = c(4, 34))
colnames(dummy_df) <- c("this thing", "whatever")
dummy_df$`this thing`
ordered_samples <- sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(mat_zscore)) %>%
dplyr::pull(final_proteomics_colnames)
mat_ordered <- mat_zscore[, ordered_samples]
sample_layout_ordered <- sample_layout %>%
dplyr::filter(final_proteomics_colnames %in% colnames(mat_ordered)) %>%
dplyr::slice(match(colnames(mat_ordered), final_proteomics_colnames))
### Create Heatmap Annotation
#### Arrange and extract grouping variable (amino acid carried)
group_vals <- sample_layout_ordered$Amino_acid_1_letter
group_levels <- unique(group_vals)
#### Generate viridis colors
group_colors <- plasma(length(group_levels))
names(group_colors) <- group_levels
#### Create the column annotation
col_anno <- HeatmapAnnotation(
`Amino acid` = group_vals,
col = list(`Amino acid` = group_colors)
)
### Create the Heatmap
pdf(paste(base_dir, "tRNA_KOs/Output/Plots/Heatmaps/heatmap_z_score_ordered_samples_", alpha_plain, "_logFC_", as.character(lfc_threshold), ".pdf", sep = ""))
ordered_samples <- sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(mat_zscore)) %>%
dplyr::pull(final_proteomics_colnames)
mat_ordered <- mat_zscore[, ordered_samples]
sample_layout_ordered <- sample_layout %>%
dplyr::filter(final_proteomics_colnames %in% colnames(mat_ordered)) %>%
dplyr::slice(match(colnames(mat_ordered), final_proteomics_colnames))
### Create Heatmap Annotation
#### Arrange and extract grouping variable (amino acid carried)
group_vals <- sample_layout_ordered$Amino_acid_1_letter
group_levels <- unique(group_vals)
#### Generate viridis colors
group_colors <- plasma(length(group_levels))
names(group_colors) <- group_levels
#### Create the column annotation
col_anno <- HeatmapAnnotation(
`Amino acid` = group_vals,
col = list(`Amino acid` = group_colors)
)
### Create the Heatmap
pdf(paste(base_dir, "tRNA_KOs/Output/Plots/Heatmaps/heatmap_z_score_ordered_samples_", alpha_plain, "_logFC_", as.character(lfc_threshold), ".pdf", sep = ""))
Heatmap(mat_ordered,
name = "Heatmap",
na_col = "green",
top_annotation = col_anno,
row_title = "Proteins",
column_title = "Samples",
cluster_columns = F,
show_column_dend = F,
show_row_names = FALSE,
show_column_names = T,
column_names_gp = gpar(fontsize = 0.5),             # size of X axis labels
row_dend_gp = gpar(lwd = 0.5))                      # thinner dendrogram lines Y axis
dev.off()
pdf(paste(base_dir, "tRNA_KOs/Output/Plots/Heatmaps/heatmap_z_score_ordered_samples_", alpha_plain, "_logFC_", as.character(lfc_threshold), ".pdf", sep = ""))
ht <- Heatmap(mat_ordered,
name = "Heatmap",
na_col = "green",
top_annotation = col_anno,
row_title = "Proteins",
column_title = "Samples",
cluster_columns = F,
show_column_dend = F,
show_row_names = FALSE,
show_column_names = T,
column_names_gp = gpar(fontsize = 0.5),             # size of X axis labels
row_dend_gp = gpar(lwd = 0.5))                      # thinner dendrogram lines Y axis
draw(ht,
heatmap_legend_side = "right",
annotation_legend_side = "right",  # both on the right
merge_legend = FALSE)
dev.off()
pdf(paste(base_dir, "tRNA_KOs/Output/Plots/Heatmaps/heatmap_z_score_ordered_samples_", alpha_plain, "_logFC_", as.character(lfc_threshold), ".pdf", sep = ""))
ht <- Heatmap(mat_ordered,
name = "Heatmap",
na_col = "green",
top_annotation = col_anno,
row_title = "Proteins",
column_title = "Samples",
cluster_columns = F,
show_column_dend = F,
show_row_names = FALSE,
show_column_names = T,
column_names_gp = gpar(fontsize = 0.5),             # size of X axis labels
row_dend_gp = gpar(lwd = 0.5))                      # thinner dendrogram lines Y axis
draw(ht,
heatmap_legend_side = "right",
annotation_legend_side = "right",  # both on the right
merge_legend = T)
dev.off()
variances <- apply(trna_ko, 1, var(na.rm = T))
variances <- apply(trna_ko, 1, function(x) var(x, na.rm = T))
hist(variances)
mat <- 2^(as.matrix(trna_ko))
# Calculate z-score
mat_zscore = t(apply(mat, 1, function(x) (x-median(x, na.rm = T))/mad(x, na.rm = T)))
ordered_samples <- sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(mat_zscore)) %>%
dplyr::pull(final_proteomics_colnames)
mat_ordered <- mat_zscore[, ordered_samples]
sample_layout_ordered <- sample_layout %>%
dplyr::filter(final_proteomics_colnames %in% colnames(mat_ordered)) %>%
dplyr::slice(match(colnames(mat_ordered), final_proteomics_colnames))
### Create Heatmap Annotation
#### Arrange and extract grouping variable (amino acid carried)
group_vals <- sample_layout_ordered$Amino_acid_1_letter
group_levels <- unique(group_vals)
#### Generate viridis colors
group_colors <- plasma(length(group_levels))
names(group_colors) <- group_levels
#### Create the column annotation
col_anno <- HeatmapAnnotation(
`Amino acid` = group_vals,
col = list(`Amino acid` = group_colors)
)
### Create the Heatmap
pdf(paste(base_dir, "tRNA_KOs/Output/Plots/Heatmaps/heatmap_z_score_ordered_samples_", alpha_plain, "_logFC_", as.character(lfc_threshold), ".pdf", sep = ""))
ht <- Heatmap(mat_ordered,
name = "Heatmap",
na_col = "green",
top_annotation = col_anno,
row_title = "Proteins",
column_title = "Samples",
cluster_columns = F,
show_column_dend = F,
show_row_names = FALSE,
show_column_names = T,
column_names_gp = gpar(fontsize = 0.5),             # size of X axis labels
row_dend_gp = gpar(lwd = 0.5))                      # thinner dendrogram lines Y axis
draw(ht,
heatmap_legend_side = "right",
annotation_legend_side = "right",  # both on the right
merge_legend = T)
dev.off()
mat <- 2^(as.matrix(trna_ko_high_var))
protein_variability <- apply(trna_ko, 1, function(x) var(x, na.rm = T))
hist(protein_variability)
most_variable_proteins <- rownames(trna_ko)[protein_variability > 0.4]
trna_ko_high_var <- trna_ko[rownames(trna_ko) %in% most_variable_proteins,]
# Prepare data matrix
mat <- 2^(as.matrix(trna_ko_high_var))
# Calculate z-score
mat_zscore = t(apply(mat, 1, function(x) (x-median(x, na.rm = T))/mad(x, na.rm = T)))
ordered_samples <- sample_layout %>%
dplyr::arrange(Amino_acid_1_letter, Anticodon, chromosome) %>%
dplyr::filter(final_proteomics_colnames %in% colnames(mat_zscore)) %>%
dplyr::pull(final_proteomics_colnames)
mat_ordered <- mat_zscore[, ordered_samples]
sample_layout_ordered <- sample_layout %>%
dplyr::filter(final_proteomics_colnames %in% colnames(mat_ordered)) %>%
dplyr::slice(match(colnames(mat_ordered), final_proteomics_colnames))
### Create Heatmap Annotation
#### Arrange and extract grouping variable (amino acid carried)
group_vals <- sample_layout_ordered$Amino_acid_1_letter
group_levels <- unique(group_vals)
#### Generate viridis colors
group_colors <- plasma(length(group_levels))
names(group_colors) <- group_levels
#### Create the column annotation
col_anno <- HeatmapAnnotation(
`Amino acid` = group_vals,
col = list(`Amino acid` = group_colors)
)
### Create the Heatmap
pdf(paste(base_dir, "tRNA_KOs/Output/Plots/Heatmaps/heatmap_z_score_ordered_samples_", alpha_plain, "_logFC_", as.character(lfc_threshold), ".pdf", sep = ""))
ht <- Heatmap(mat_ordered,
name = "Heatmap",
na_col = "green",
top_annotation = col_anno,
row_title = "Proteins",
column_title = "Samples",
cluster_columns = F,
show_column_dend = F,
show_row_names = FALSE,
show_column_names = T,
column_names_gp = gpar(fontsize = 0.5),             # size of X axis labels
row_dend_gp = gpar(lwd = 0.5))                      # thinner dendrogram lines Y axis
draw(ht,
heatmap_legend_side = "right",
annotation_legend_side = "right",  # both on the right
merge_legend = T)
dev.off()
