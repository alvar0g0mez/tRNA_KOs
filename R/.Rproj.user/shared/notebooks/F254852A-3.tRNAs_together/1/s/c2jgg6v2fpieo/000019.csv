"0","# Create a function that performs the DE analysis and returns the responsiveness dataset"
"0","perform_DE_analysis <- function(trna_ko) {"
"0","  # Get the names of all KOs we have, and set WT as the reference"
"0","  temp <- data.frame(KO_names = colnames(trna_ko)) %>%"
"0","    mutate(trna_levels = case_when(grepl(""WT"", KO_names) ~ ""WT"","
"0","                                   TRUE ~ KO_names))"
"0","  "
"0","  # Deal with column names not being unique, since we have all plates together here"
"0","  sample_trna <- c()"
"0","  for (i in 1:ncol(trna_ko)) {"
"0","    column_name <- colnames(trna_ko)[i]"
"0","    if (grepl(""WT"", column_name)) {"
"0","      sample_trna <- c(sample_trna, ""WT"")"
"0","    }"
"0","    else {"
"0","      sample_trna <- c(sample_trna, substr(column_name, 1, str_locate(column_name, ""_"")[1]-2))"
"0","    }"
"0","  }"
"0","  sample_trna <- as.factor(unique(sample_trna))"
"0","  sample_trna <- relevel(as.factor(temp$trna_levels), ref = 'WT')"
"0","  rm(temp)"
"0","  "
"0","  # Generate design matrix"
"0","  mm <- model.matrix(~sample_trna)"
"0","  colnames(mm) <- levels(sample_trna)"
"0","  voom(trna_ko, mm, plot = TRUE)                                  # This I still need to look into!"
"0","  "
"0","  # Fit linear model"
"0","  fit <- lmFit(log2(trna_ko), mm)                                 # Notice the log2 here"
"0","  fit2 <- eBayes(fit, trend = TRUE)"
"0","  "
"0","  # Identify differentially expressed proteins"
"0","  da <- list()"
"0","  for (i in colnames(mm)) {"
"0","    da[[i]] <- topTable(fit2, coef = i, adjust = 'BH', n = Inf, sort.by = 'none')"
"0","  }"
"0","  "
"0","  # Format data"
"0","  da <- bind_rows(da) %>%"
"0","    mutate(protein = rep(rownames(da[[1]]), times = length(da)),"
"0","           Strain.Name = rep(names(da), each = nrow(da[[1]])), .before = 1) %>%"
"0","    `rownames<-`(NULL) %>%"
"0","    select(protein, Strain.Name, logFC, adj.P.Val) %>%"
"0","    filter(Strain.Name != 'WT') %>%                              # From here on in this function it's added by me"
"0","    mutate(diffexpressed = case_when(logFC > lfc_threshold & adj.P.Val < alpha ~ ""Up_regulated"","
"0","                                     logFC < -lfc_threshold & adj.P.Val < alpha ~ ""Down_regulated"","
"0","                                     TRUE ~ ""Not_significant""))"
"0","  "
"0","  # Add a column to da with the number of replicates per KO - by me - THIS DOESN'T REALLY MAKE SENSE INSIDE THIS FUNCTION BUT WHEN DOING DE FOR ALL PLATES AT ONCE IT WAS, SO I'LL KEEP IT JUST IN CASE"
"0","  unique_KOs <- unique(da$Strain.Name)"
"0","  replicates <- c()"
"0","  for (i in 1:length(unique_KOs)) {"
"0","    KO <- unique_KOs[i]"
"0","    replicates <- c(replicates, sum(grepl(KO, colnames(trna_ko), fixed = T)))"
"0","  }"
"0","  KOs_replicates <- data.frame(unique_KOs, replicates)"
"0","  colnames(KOs_replicates) <- c(""Strain.Name"", ""Replicate_num"")"
"0","  da <- merge(da, KOs_replicates, by = ""Strain.Name"")"
"0","  "
"0","  # Responsiveness"
"0","  responsiveness <- da %>%"
"0","    group_by(Strain.Name) %>%"
"0","    summarise(nDEP = sum(abs(logFC) >= log2(lfc_threshold) & adj.P.Val <= 0.01, na.rm = T),"
"0","              Replicate_num = mean(Replicate_num)) %>%"
"0","    mutate(AA = str_sub(Strain.Name, 2, 2),"
"0","           chromosome = str_extract(str_remove(str_sub(Strain.Name, 1, -4), '[:digit:]$'), '[:alpha:]$'),"
"0","           anticodon = str_extract(Strain.Name, ""(?<=\\()[[:alpha:]]{3}(?=\\))"")) %>%"
"0","    arrange(AA) %>%"
"0","    mutate(anticodon = factor(anticodon, levels = unique(anticodon)))"
"0","  "
"0","  return(list(fit = fit,"
"0","              fit2 = fit2,"
"0","              da = da, "
"0","              resp = responsiveness))"
"0","}"
"0",""
"0",""
"0","# Perform DE analysis for the 3 plates together"
"0","DE <- perform_DE_analysis(trna_ko)"
